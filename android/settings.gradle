// android/settings.gradle

pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
    // This makes @react-native/gradle-plugin and its plugins available.
    includeBuild(new File(["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json')"].execute(null, rootDir).text.trim()).getParentFile().toString())
}

// Apply the React Native settings plugin functionalities.
// The includeBuild above should make the necessary components available for this call.
apply from: new File(rootProject.projectDir, "../node_modules/@react-native/gradle-plugin/src/main/settings/react-native-settings.gradle")
applySettingsPlugin(settings)

// Apply Expo-specific Gradle utilities.
apply from: new File(["node", "--print", "require.resolve('@expo/gradle-utils/package.json')"].execute(null, rootDir).text.trim(), "../../../gradle-utils.gradle")
applyExpoProperties(settings)

// --- Dev Client specific setup ---
def devClientGradle = new File(["node", "--print", "require.resolve('expo-dev-client/package.json')"].execute(null, rootDir).text.trim(), "../android/expo-dev-client.gradle")
if (devClientGradle.exists()) {
    apply from: devClientGradle
}
// --- End Dev Client specific setup ---

include ':app'

useExpoModules(settings)

rootProject.name = 'Chatgpt'

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
        maven { url "$rootDir/../node_modules/react-native/android" }
        maven { url "$rootDir/../node_modules/jsc-android/dist" }
    }
    def rnLibsVersionsToml = new File(new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim()).getParentFile(), "gradle/libs.versions.toml")
    if (rnLibsVersionsToml.exists()) {
        versionCatalogs {
            reactAndroidLibs {
                from(files(rnLibsVersionsToml.getAbsolutePath()))
            }
        }
    }
}
